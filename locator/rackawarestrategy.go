// Copyright (c) 2020 DistAlchemist
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

package locator

import (
	"github.com/DistAlchemist/Mongongo/network"
)

// RackAwareStrategy implements RackStrategy interface
type RackAwareStrategy struct {
	//
	// *RackStrategy
	tokenMetadata TokenMetadata
}

// GetStorageEndPoints return tokens generated by consistent hashing
// input is a list of rowKeys
func (ras *RackAwareStrategy) GetStorageEndPoints(token string) []network.EndPoint {
	m := make([]network.EndPoint, 1)
	return m
}

// GetTokenEndPointMap returns a copy of tokenEndPointMap from
// tokenMetadata
func (ras *RackAwareStrategy) GetTokenEndPointMap() map[string]network.EndPoint {
	return make(map[string]network.EndPoint)
}

// GetToken returns endpoint's token through tokenMetadata
func (ras *RackAwareStrategy) GetToken(endPoint network.EndPoint) string {
	return ras.tokenMetadata.GetToken(endPoint)
}

// GetReadStorageEndPoints ...
func (ras *RackAwareStrategy) GetReadStorageEndPoints(token string) map[network.EndPoint]bool {
	return map[network.EndPoint]bool{}
}
